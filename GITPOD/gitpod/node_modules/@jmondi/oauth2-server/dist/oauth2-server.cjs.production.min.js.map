{"version":3,"file":"oauth2-server.cjs.production.min.js","sources":["../src/exceptions/oauth.exception.ts","../node_modules/regenerator-runtime/runtime.js","../src/code_verifiers/plain.verifier.ts","../src/utils/base64.ts","../src/code_verifiers/s256.verifier.ts","../src/requests/authorization.request.ts","../src/responses/response.ts","../src/responses/redirect.response.ts","../src/utils/date_interval.ts","../src/entities/client.entity.ts","../src/responses/bearer_token.response.ts","../src/utils/array.ts","../src/utils/time.ts","../src/grants/abstract/abstract.grant.ts","../src/grants/abstract/abstract_authorized.grant.ts","../src/grants/auth_code.grant.ts","../src/grants/client_credentials.grant.ts","../src/grants/implicit.grant.ts","../src/grants/password.grant.ts","../src/grants/refresh_token.grant.ts","../src/authorization_server.ts","../src/requests/request.ts","../src/utils/jwt.ts"],"sourcesContent":["export const HttpStatus = {\n  NOT_ACCEPTABLE: 406,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  INTERNAL_SERVER_ERROR: 500,\n  OK: 200,\n};\n\nexport enum ErrorType {\n  InvalidRequest = \"invalid_request\",\n  InvalidClient = \"invalid_client\",\n  InvalidGrant = \"invalid_grant\",\n  InvalidScope = \"invalid_scope\",\n  UnauthorizedClient = \"unauthorized_client\",\n  UnsupportedGrantType = \"unsupported_grant_type\",\n  AccessDenied = \"access_denied\",\n}\n\nexport class OAuthException extends Error {\n  constructor(\n    public readonly error: string,\n    public readonly errorType: ErrorType,\n    public readonly errorDescription?: string,\n    public readonly errorUri?: string,\n    public readonly status = HttpStatus.BAD_REQUEST,\n  ) {\n    super(errorDescription ? `${error}: ${errorDescription}` : error);\n\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n  }\n\n  /**\n   * The request is missing a parameter so the server can’t proceed with the request. This\n   * may also be returned if the request includes an unsupported parameter or repeats a\n   * parameter.\n   */\n  static invalidRequest(parameter: string, errorDescription?: string): OAuthException {\n    let message = \"The request is missing a required parameter, includes an invalid parameter value, \";\n    message += \"includes a parameter more than once, or is otherwise malformed\";\n    errorDescription = errorDescription ? errorDescription : `Check the \\`${parameter}\\` parameter`;\n    return new OAuthException(message, ErrorType.InvalidRequest, errorDescription);\n  }\n\n  /**\n   * Client authentication failed, such as if the request contains an invalid client ID or\n   * secret. Send an HTTP 401 response in this case.\n   */\n  static invalidClient(errorDescription?: string) {\n    return new OAuthException(\n      \"Client authentication failed\",\n      ErrorType.InvalidClient,\n      errorDescription,\n      undefined,\n      HttpStatus.UNAUTHORIZED,\n    );\n  }\n\n  /**\n   * The authorization code (or user’s password for the password grant type) is invalid or\n   * expired. This is also the error you would return if the redirect URL given in the\n   * authorization grant does not match the URL provided in this access token request.\n   */\n  static invalidGrant(errorDescription?: string) {\n    let message = \"The provided authorization grant (e.g., authorization_code, client_credentials) or refresh token \";\n    message += \"is invalid, expired, revoked, or does not match the redirection URI used in the authorization \";\n    message += \"request, or was issued to another client\";\n    return new OAuthException(message, ErrorType.InvalidGrant, errorDescription);\n  }\n\n  /**\n   * For access token requests that include a scope (password or client_credentials grants),\n   * this error indicates an invalid scope value in the request.\n   */\n  static invalidScope(scope?: string, redirectUri?: string) {\n    const message = \"The requested scope is invalid, unknown, or malformed\";\n    let hint = \"Specify a scope in the request or set a default scope\";\n    if (scope) {\n      hint = `Check the \\`${scope}\\` scope(s)`;\n    }\n    return new OAuthException(message, ErrorType.InvalidScope, hint, redirectUri);\n  }\n\n  /**\n   * This client is not authorized to use the requested grant type. For example, if you\n   * restrict which applications can use the Implicit grant, you would return this error\n   * for the other apps.\n   */\n  static unauthorizedClient() {\n    return new OAuthException(`unauthorized client`, ErrorType.UnauthorizedClient);\n  }\n\n  /**\n   * If a grant type is requested that the authorization server doesn’t recognize, use\n   * this code. Note that unknown grant types also use this specific error code\n   * rather than using the invalid_request above.\n   */\n  static unsupportedGrantType() {\n    return new OAuthException(\"unsupported grant_type\", ErrorType.UnsupportedGrantType);\n  }\n\n  static logicException(message: string) {\n    return new OAuthException(message, ErrorType.InvalidRequest);\n  }\n\n  static accessDenied(errorDescription?: string) {\n    return new OAuthException(\n      \"The resource owner or authorization server denied the request\",\n      ErrorType.AccessDenied,\n      errorDescription,\n      undefined,\n      HttpStatus.UNAUTHORIZED,\n    );\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { ICodeChallenge } from \"./verifier\";\n\nexport class PlainVerifier implements ICodeChallenge {\n  public readonly method = \"plain\";\n\n  verifyCodeChallenge(codeVerifier: string, codeChallenge: string): boolean {\n    return codeChallenge === codeVerifier;\n  }\n}\n","export function base64encode(str: string | Buffer) {\n  if (typeof str === \"string\") str = Buffer.from(str);\n  return str.toString(\"base64\");\n}\n\nexport function base64decode(str: string | Buffer) {\n  if (typeof str === \"string\") str = Buffer.from(str, \"base64\");\n  return str.toString(\"binary\");\n}\n\nexport function base64urlencode(str: string | Buffer) {\n  return base64encode(str)\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\")\n    .replace(/=/g, \"\");\n}\n","import crypto from \"crypto\";\n\nimport { base64urlencode } from \"../utils/base64\";\nimport { ICodeChallenge } from \"./verifier\";\n\nexport class S256Verifier implements ICodeChallenge {\n  public readonly method = \"S256\";\n\n  verifyCodeChallenge(codeVerifier: string, codeChallenge: string): boolean {\n    const codeHash = crypto\n      .createHash(\"sha256\")\n      .update(codeVerifier)\n      .digest();\n    return codeChallenge === base64urlencode(codeHash);\n  }\n}\n","import { OAuthClient } from \"../entities/client.entity\";\nimport { OAuthScope } from \"../entities/scope.entity\";\nimport { OAuthUser } from \"../entities/user.entity\";\nimport { OAuthException } from \"../exceptions/oauth.exception\";\nimport { GrantIdentifier } from \"../grants/abstract/grant.interface\";\n\nexport class AuthorizationRequest {\n  scopes: OAuthScope[] = [];\n  isAuthorizationApproved: boolean;\n  redirectUri: string | undefined;\n  state?: string;\n  codeChallenge?: string;\n  codeChallengeMethod?: string;\n\n  constructor(\n    public readonly grantTypeId: GrantIdentifier,\n    public readonly client: OAuthClient,\n    redirectUri?: string,\n    public user?: OAuthUser,\n  ) {\n    this.scopes = [];\n    this.isAuthorizationApproved = false;\n    this.redirectUri = redirectUri ?? client.redirectUris[0];\n    if (!this.redirectUri) throw OAuthException.logicException(\"Unknown redirect_uri\");\n  }\n}\n","export interface Headers {\n  location?: string;\n  [key: string]: any;\n}\n\nexport interface Options {\n  headers?: Headers;\n  body?: { [key: string]: any };\n  query?: { [key: string]: any };\n  [key: string]: any;\n}\n\nexport interface ResponseInterface {\n  status: number;\n  headers: { [key: string]: any };\n  body: { [key: string]: any };\n\n  get(field: string): string;\n\n  set(field: string, value: string): void;\n}\n\nexport class OAuthResponse implements ResponseInterface {\n  status = 200;\n  body: Record<string, unknown> = {};\n  headers: Headers = {};\n\n  constructor(responseOptions: Options = { headers: {} }) {\n    this.headers = {\n      ...responseOptions.headers,\n    };\n  }\n\n  get(field: string): any {\n    console.log({ headers: this.headers, field });\n    return \"\";\n    // return this.headers[field.toLowerCase()];\n  }\n\n  set(fieldOrHeaders: string, value: any): void {\n    this.headers[fieldOrHeaders.toLowerCase()] = value;\n  }\n}\n","import { OAuthResponse, Options } from \"./response\";\n\nexport class RedirectResponse extends OAuthResponse {\n  constructor(redirectUri: string, options?: Options) {\n    super(options);\n    this.set(\"Location\", redirectUri);\n    this.status = 302;\n  }\n}\n","import ms from \"ms\";\n\nexport type DateIntervalType = string;\n\nexport class DateInterval {\n  public readonly ms: number;\n\n  constructor(private readonly interval: DateIntervalType) {\n    this.ms = ms(interval);\n  }\n\n  getEndDate(): Date {\n    return new Date(this.getEndTimeMs());\n  }\n\n  getEndTimeMs(): number {\n    return Date.now() + this.ms;\n  }\n\n  getEndTimeSeconds(): number {\n    return Math.ceil(this.getEndTimeMs() / 1000);\n  }\n\n  getSeconds(): number {\n    return Math.ceil(this.ms / 1000);\n  }\n\n  static getDateEnd(ms: string) {\n    return new DateInterval(ms).getEndDate();\n  }\n}\n","import { GrantIdentifier } from \"../grants/abstract/grant.interface\";\nimport { OAuthScope } from \"./scope.entity\";\n\nexport interface OAuthClient {\n  id: string;\n  name: string;\n  secret?: string;\n  redirectUris: string[];\n  allowedGrants: GrantIdentifier[];\n  scopes: OAuthScope[];\n}\n\nexport function isClientConfidential(client: OAuthClient): boolean {\n  return !!client.secret;\n}\n","import { OAuthToken } from \"../entities/token.entity\";\nimport { HttpStatus } from \"../exceptions/oauth.exception\";\nimport { OAuthResponse, Options } from \"./response\";\n\nexport class BearerTokenResponse extends OAuthResponse {\n  readonly status = HttpStatus.OK;\n\n  constructor(public readonly accessToken: OAuthToken, options?: Options) {\n    super(options);\n\n    this.set(\"pragma\", \"no-cache\");\n    this.set(\"cache-control\", \"no-store\");\n    this.set(\"content-type\", \"application/json; charset=UTF-8\");\n  }\n}\n","export const arrayDiff = (arr1: any[], arr2: any[]) => arr1.filter(x => !arr2.includes(x));\n","export function getSecondsUntil(date: Date) {\n  return roundToSeconds(date.getTime() - Date.now());\n}\n\nexport function roundToSeconds(ms: Date | number) {\n  if (ms instanceof Date) ms = ms.getTime();\n  return Math.ceil(ms / 1000);\n}\n","import { AuthorizationServerOptions } from \"../../authorization_server\";\nimport { isClientConfidential, OAuthClient } from \"../../entities/client.entity\";\nimport { OAuthScope } from \"../../entities/scope.entity\";\nimport { OAuthToken } from \"../../entities/token.entity\";\nimport { OAuthUser } from \"../../entities/user.entity\";\nimport { OAuthException } from \"../../exceptions/oauth.exception\";\nimport { OAuthTokenRepository } from \"../../repositories/access_token.repository\";\nimport { OAuthAuthCodeRepository } from \"../../repositories/auth_code.repository\";\nimport { OAuthClientRepository } from \"../../repositories/client.repository\";\nimport { OAuthScopeRepository } from \"../../repositories/scope.repository\";\nimport { ExtraAccessTokenFields, OAuthUserRepository } from \"../../repositories/user.repository\";\nimport { AuthorizationRequest } from \"../../requests/authorization.request\";\nimport { RequestInterface } from \"../../requests/request\";\nimport { BearerTokenResponse } from \"../../responses/bearer_token.response\";\nimport { ResponseInterface } from \"../../responses/response\";\nimport { arrayDiff } from \"../../utils/array\";\nimport { base64decode } from \"../../utils/base64\";\nimport { DateInterval } from \"../../utils/date_interval\";\nimport { JwtInterface } from \"../../utils/jwt\";\nimport { getSecondsUntil, roundToSeconds } from \"../../utils/time\";\nimport { GrantIdentifier, GrantInterface } from \"./grant.interface\";\n\nexport interface ITokenData {\n  iss: undefined;\n  sub: string | undefined;\n  aud: undefined;\n  exp: number;\n  nbf: number;\n  iat: number;\n  jti: string;\n  cid: string;\n  scope: string;\n}\n\nexport abstract class AbstractGrant implements GrantInterface {\n  public readonly options: AuthorizationServerOptions = {\n    requiresPKCE: true,\n  };\n\n  protected readonly scopeDelimiterString = \" \";\n\n  protected readonly supportedGrantTypes: GrantIdentifier[] = [\n    \"client_credentials\",\n    \"authorization_code\",\n    \"refresh_token\",\n    \"password\",\n    \"implicit\",\n  ];\n\n  abstract readonly identifier: GrantIdentifier;\n\n  constructor(\n    protected readonly authCodeRepository: OAuthAuthCodeRepository,\n    protected readonly clientRepository: OAuthClientRepository,\n    protected readonly tokenRepository: OAuthTokenRepository,\n    protected readonly scopeRepository: OAuthScopeRepository,\n    protected readonly userRepository: OAuthUserRepository,\n    protected readonly jwt: JwtInterface,\n  ) {}\n\n  async makeBearerTokenResponse(\n    client: OAuthClient,\n    accessToken: OAuthToken,\n    scopes: OAuthScope[] = [],\n    extraJwtFields: ExtraAccessTokenFields = {},\n  ) {\n    const scope = scopes.map(scope => scope.name).join(this.scopeDelimiterString);\n\n    const encryptedAccessToken = await this.encryptAccessToken(client, accessToken, scopes, extraJwtFields);\n\n    let encryptedRefreshToken: string | undefined = undefined;\n\n    if (accessToken.refreshToken) {\n      encryptedRefreshToken = await this.encryptRefreshToken(client, accessToken, scopes);\n    }\n\n    const bearerTokenResponse = new BearerTokenResponse(accessToken);\n\n    bearerTokenResponse.body = {\n      token_type: \"Bearer\",\n      expires_in: getSecondsUntil(accessToken.accessTokenExpiresAt),\n      access_token: encryptedAccessToken,\n      refresh_token: encryptedRefreshToken,\n      scope,\n    };\n\n    return bearerTokenResponse;\n  }\n\n  protected encryptRefreshToken(client: OAuthClient, refreshToken: OAuthToken, scopes: OAuthScope[]) {\n    const expiresAtMs = refreshToken.refreshTokenExpiresAt?.getTime() ?? refreshToken.accessTokenExpiresAt.getTime();\n    return this.encrypt({\n      client_id: client.id,\n      access_token_id: refreshToken.accessToken,\n      refresh_token_id: refreshToken.refreshToken,\n      scope: scopes.map(scope => scope.name).join(this.scopeDelimiterString),\n      user_id: refreshToken.user?.id,\n      expire_time: Math.ceil(expiresAtMs / 1000),\n      // token_version: 1, // @todo token version?\n    });\n  }\n\n  protected encryptAccessToken(\n    client: OAuthClient,\n    accessToken: OAuthToken,\n    scopes: OAuthScope[],\n    extraJwtFields: ExtraAccessTokenFields,\n  ) {\n    return this.encrypt(<ITokenData | any>{\n      // non standard claims\n      ...extraJwtFields,\n      cid: client.name,\n      scope: scopes.map(scope => scope.name).join(this.scopeDelimiterString),\n\n      // standard claims\n      iss: undefined, // @see https://tools.ietf.org/html/rfc7519#section-4.1.1\n      sub: accessToken.user?.id, // @see https://tools.ietf.org/html/rfc7519#section-4.1.2\n      aud: undefined, // @see https://tools.ietf.org/html/rfc7519#section-4.1.3\n      exp: roundToSeconds(accessToken.accessTokenExpiresAt.getTime()), // @see https://tools.ietf.org/html/rfc7519#section-4.1.4\n      nbf: roundToSeconds(Date.now()), // @see https://tools.ietf.org/html/rfc7519#section-4.1.5\n      iat: roundToSeconds(Date.now()), // @see https://tools.ietf.org/html/rfc7519#section-4.1.6\n      jti: accessToken.accessToken, // @see https://tools.ietf.org/html/rfc7519#section-4.1.7\n    });\n  }\n\n  protected async validateClient(request: RequestInterface): Promise<OAuthClient> {\n    const [clientId, clientSecret] = this.getClientCredentials(request);\n\n    const grantType = this.getGrantType(request);\n\n    const client = await this.clientRepository.getByIdentifier(clientId);\n\n    if (isClientConfidential(client) && !clientSecret) {\n      throw OAuthException.invalidClient(\"Confidential clients require client_secret.\");\n    }\n\n    const userValidationSuccess = await this.clientRepository.isClientValid(grantType, client, clientSecret);\n\n    if (!userValidationSuccess) {\n      throw OAuthException.invalidClient();\n    }\n\n    if (grantType === \"client_credentials\") {\n      if (!client.secret || client.secret !== clientSecret) {\n        throw OAuthException.invalidClient(\"Invalid client_credentials\");\n      }\n    }\n\n    return client;\n  }\n\n  protected getClientCredentials(request: RequestInterface): [string, string | undefined] {\n    const [basicAuthUser, basicAuthPass] = this.getBasicAuthCredentials(request);\n\n    let clientId = this.getRequestParameter(\"client_id\", request, basicAuthUser);\n\n    if (!clientId) {\n      throw OAuthException.invalidRequest(\"client_id\");\n    }\n\n    let clientSecret = this.getRequestParameter(\"client_secret\", request, basicAuthPass);\n\n    if (Array.isArray(clientId) && clientId.length > 0) clientId = clientId[0];\n\n    if (Array.isArray(clientSecret) && clientSecret.length > 0) clientSecret = clientSecret[0];\n\n    return [clientId, clientSecret];\n  }\n\n  protected getBasicAuthCredentials(request: RequestInterface) {\n    if (!request.headers?.hasOwnProperty(\"authorization\")) {\n      return [undefined, undefined];\n    }\n\n    const header = request.headers[\"authorization\"];\n\n    if (!header || !header.startsWith(\"Basic \")) {\n      return [undefined, undefined];\n    }\n\n    const decoded = base64decode(header.substr(6, header.length));\n\n    if (!decoded.includes(\":\")) {\n      return [undefined, undefined];\n    }\n\n    return decoded.split(\":\");\n  }\n\n  protected async validateScopes(\n    scopes: undefined | string | string[] = [],\n    redirectUri?: string,\n  ): Promise<OAuthScope[]> {\n    if (typeof scopes === \"string\") {\n      scopes = scopes.split(this.scopeDelimiterString);\n    }\n\n    if (!scopes || scopes.length === 0 || scopes[0] === \"\") {\n      return [];\n    }\n\n    const validScopes = await this.scopeRepository.getAllByIdentifiers(scopes);\n\n    const invalidScopes = arrayDiff(\n      scopes,\n      validScopes.map(scope => scope.name),\n    );\n\n    if (invalidScopes.length > 0) {\n      throw OAuthException.invalidScope(invalidScopes.join(\", \"), redirectUri);\n    }\n\n    return validScopes;\n  }\n\n  protected async issueAccessToken(\n    accessTokenTTL: DateInterval,\n    client: OAuthClient,\n    user?: OAuthUser,\n    scopes: OAuthScope[] = [],\n  ): Promise<OAuthToken> {\n    const accessToken = await this.tokenRepository.issueToken(client, scopes, user);\n    accessToken.accessTokenExpiresAt = accessTokenTTL.getEndDate();\n    await this.tokenRepository.persist(accessToken);\n    return accessToken;\n  }\n\n  issueRefreshToken(accessToken: OAuthToken): Promise<OAuthToken> {\n    return this.tokenRepository.issueRefreshToken(accessToken);\n  }\n\n  private getGrantType(request: RequestInterface): GrantIdentifier {\n    const result =\n      this.getRequestParameter(\"grant_type\", request) ?? this.getQueryStringParameter(\"grant_type\", request);\n\n    if (!result || !this.supportedGrantTypes.includes(result)) {\n      throw OAuthException.invalidRequest(\"grant_type\");\n    }\n\n    if (this.identifier !== result) {\n      throw OAuthException.invalidRequest(\"grant_type\", \"something went wrong\"); // @todo remove the something went wrong\n    }\n\n    return result;\n  }\n\n  protected getRequestParameter(param: string, request: RequestInterface, defaultValue?: any) {\n    return request.body?.[param] ?? defaultValue;\n  }\n\n  protected getQueryStringParameter(param: string, request: RequestInterface, defaultValue?: any) {\n    return request.query?.[param] ?? defaultValue;\n  }\n\n  protected encrypt(unencryptedData: string | Buffer | Record<string, unknown>): Promise<string> {\n    return this.jwt.sign(unencryptedData);\n  }\n\n  protected async decrypt(encryptedData: string) {\n    return await this.jwt.verify(encryptedData);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  validateAuthorizationRequest(request: RequestInterface): Promise<AuthorizationRequest> {\n    throw new Error(\"Grant does not support the request\");\n  }\n\n  canRespondToAccessTokenRequest(request: RequestInterface): boolean {\n    return this.getRequestParameter(\"grant_type\", request) === this.identifier;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  canRespondToAuthorizationRequest(request: RequestInterface): boolean {\n    return false;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async completeAuthorizationRequest(authorizationRequest: AuthorizationRequest): Promise<ResponseInterface> {\n    throw new Error(\"Grant does not support the request\");\n  }\n\n  async respondToAccessTokenRequest(\n    req: RequestInterface, // eslint-disable-line @typescript-eslint/no-unused-vars\n    res: ResponseInterface, // eslint-disable-line @typescript-eslint/no-unused-vars\n    tokenTTL: DateInterval, // eslint-disable-line @typescript-eslint/no-unused-vars\n  ): Promise<ResponseInterface> {\n    throw new Error(\"Grant does not support the request\");\n  }\n}\n","import querystring, { ParsedUrlQueryInput } from \"querystring\";\nimport { parse } from \"uri-js\";\n\nimport { OAuthClient } from \"../../entities/client.entity\";\nimport { OAuthException } from \"../../exceptions/oauth.exception\";\nimport { RequestInterface } from \"../../requests/request\";\nimport { AbstractGrant } from \"./abstract.grant\";\n\nexport abstract class AbstractAuthorizedGrant extends AbstractGrant {\n  protected makeRedirectUrl(uri: string, params: ParsedUrlQueryInput, queryDelimiter = \"?\") {\n    const split = uri.includes(queryDelimiter) ? \"&\" : queryDelimiter;\n    return uri + split + querystring.stringify(params);\n  }\n\n  protected getRedirectUri(request: RequestInterface, client: OAuthClient): string | undefined {\n    let redirectUri = this.getQueryStringParameter(\"redirect_uri\", request);\n\n    if (!redirectUri) {\n      return;\n    }\n\n    if (Array.isArray(redirectUri) && redirectUri.length === 1) {\n      redirectUri = redirectUri[0];\n    }\n\n    this.validateRedirectUri(redirectUri, client);\n\n    return redirectUri;\n  }\n\n  private validateRedirectUri(redirectUri: any, client: OAuthClient) {\n    if (typeof redirectUri !== \"string\" || redirectUri === \"\") {\n      throw OAuthException.invalidRequest(\"redirect_uri\");\n    }\n\n    const parsed = parse(redirectUri);\n\n    if (!parsed.scheme) {\n      throw OAuthException.invalidRequest(\"redirect_uri\");\n    }\n\n    if (!!parsed.fragment) {\n      throw OAuthException.invalidRequest(\n        \"redirect_uri\",\n        \"Redirection endpoint must not contain url fragment based on RFC6749, section 3.1.2\",\n      );\n    }\n\n    if (!client.redirectUris.includes(redirectUri)) {\n      throw OAuthException.invalidClient(\"Invalid redirect_uri\");\n    }\n\n    return redirectUri;\n  }\n}\n","import { PlainVerifier } from \"../code_verifiers/plain.verifier\";\nimport { S256Verifier } from \"../code_verifiers/s256.verifier\";\nimport { CodeChallengeMethod, ICodeChallenge } from \"../code_verifiers/verifier\";\nimport { OAuthAuthCode } from \"../entities/auth_code.entity\";\nimport { OAuthClient } from \"../entities/client.entity\";\nimport { OAuthScope } from \"../entities/scope.entity\";\nimport { OAuthException } from \"../exceptions/oauth.exception\";\nimport { AuthorizationRequest } from \"../requests/authorization.request\";\nimport { RequestInterface } from \"../requests/request\";\nimport { RedirectResponse } from \"../responses/redirect.response\";\nimport { ResponseInterface } from \"../responses/response\";\nimport { base64decode } from \"../utils/base64\";\nimport { DateInterval } from \"../utils/date_interval\";\nimport { AbstractAuthorizedGrant } from \"./abstract/abstract_authorized.grant\";\nimport { GrantIdentifier } from \"./abstract/grant.interface\";\n\nexport interface IAuthCodePayload {\n  client_id: string;\n  auth_code_id: string;\n  expire_time: number;\n  scopes: string[];\n  user_id?: string;\n  redirect_uri?: string;\n  code_challenge?: string;\n  code_challenge_method?: string;\n}\n\nexport const REGEXP_CODE_CHALLENGE = /^[A-Za-z0-9-._~]{43,128}$/;\n\nexport const REGEXP_CODE_VERIFIER = /^[A-Za-z0-9-._~]{43,128}$/;\n\nexport const REGEX_ACCESS_TOKEN = /[A-Za-z0-9\\-\\._~\\+\\/]+=*/g;\n\nexport class AuthCodeGrant extends AbstractAuthorizedGrant {\n  readonly identifier: GrantIdentifier = \"authorization_code\";\n\n  protected authCodeTTL: DateInterval = new DateInterval(\"15m\");\n\n  private codeChallengeVerifiers = {\n    plain: new PlainVerifier(),\n    S256: new S256Verifier(),\n  };\n\n  async respondToAccessTokenRequest(\n    request: RequestInterface,\n    response: ResponseInterface,\n    accessTokenTTL: DateInterval,\n  ): Promise<ResponseInterface> {\n    const client = await this.validateClient(request);\n\n    const encryptedAuthCode = this.getRequestParameter(\"code\", request);\n\n    if (!encryptedAuthCode) throw OAuthException.invalidRequest(\"code\");\n\n    const decryptedCode = await this.decrypt(encryptedAuthCode);\n\n    const validatedPayload = await this.validateAuthorizationCode(decryptedCode, client, request);\n\n    const userId = validatedPayload.user_id;\n\n    const user = userId ? await this.userRepository.getUserByCredentials(userId) : undefined;\n\n    const scopes: OAuthScope[] = [];\n\n    try {\n      const finalizedScopes = await this.scopeRepository.finalize(\n        await this.validateScopes(validatedPayload.scopes ?? []),\n        this.identifier,\n        client,\n        userId,\n      );\n      finalizedScopes.forEach(scope => scopes.push(scope));\n    } catch (e) {\n      throw OAuthException.invalidRequest(\"code\", \"Cannot verify scopes\");\n    }\n\n    const authCode = await this.authCodeRepository.getByIdentifier(validatedPayload.auth_code_id);\n\n    if (authCode.codeChallenge) {\n      if (!validatedPayload.code_challenge) throw OAuthException.invalidRequest(\"code_challenge\");\n\n      if (authCode.codeChallenge !== validatedPayload.code_challenge) {\n        throw OAuthException.invalidRequest(\"code_challenge\", \"Provided code challenge does not match auth code\");\n      }\n\n      const codeVerifier = this.getRequestParameter(\"code_verifier\", request);\n\n      if (!codeVerifier) {\n        throw OAuthException.invalidRequest(\"code_verifier\");\n      }\n\n      // Validate code_verifier according to RFC-7636\n      // @see: https://tools.ietf.org/html/rfc7636#section-4.1\n      if (!REGEXP_CODE_VERIFIER.test(codeVerifier)) {\n        throw OAuthException.invalidRequest(\n          \"code_verifier\",\n          \"Code verifier must follow the specifications of RFS-7636\",\n        );\n      }\n\n      const codeChallengeMethod: CodeChallengeMethod | undefined = validatedPayload.code_challenge_method;\n\n      let verifier: ICodeChallenge = this.codeChallengeVerifiers.plain;\n\n      if (codeChallengeMethod?.toLowerCase() === \"s256\") {\n        verifier = this.codeChallengeVerifiers.S256;\n      }\n\n      if (!verifier.verifyCodeChallenge(codeVerifier, validatedPayload.code_challenge)) {\n        throw OAuthException.invalidGrant(\"Failed to verify code challenge.\");\n      }\n    }\n\n    let accessToken = await this.issueAccessToken(accessTokenTTL, client, user, scopes);\n\n    accessToken = await this.issueRefreshToken(accessToken);\n\n    await this.authCodeRepository.revoke(validatedPayload.auth_code_id);\n\n    const extraJwtFields = user ? await this.userRepository.extraAccessTokenFields?.(user) : undefined;\n\n    return await this.makeBearerTokenResponse(client, accessToken, scopes, extraJwtFields);\n  }\n\n  canRespondToAuthorizationRequest(request: RequestInterface): boolean {\n    const responseType = this.getQueryStringParameter(\"response_type\", request);\n    const hasClientId = !!this.getQueryStringParameter(\"client_id\", request);\n    return responseType === \"code\" && hasClientId;\n  }\n\n  async validateAuthorizationRequest(request: RequestInterface): Promise<AuthorizationRequest> {\n    const clientId = this.getQueryStringParameter(\"client_id\", request);\n\n    if (typeof clientId !== \"string\") {\n      throw OAuthException.invalidRequest(\"client_id\");\n    }\n\n    const client = await this.clientRepository.getByIdentifier(clientId);\n\n    if (!client) {\n      throw OAuthException.invalidClient();\n    }\n\n    const redirectUri = this.getRedirectUri(request, client);\n\n    const bodyScopes = this.getQueryStringParameter(\"scope\", request, []);\n\n    const scopes = await this.validateScopes(bodyScopes);\n\n    const stateParameter = this.getQueryStringParameter(\"state\", request);\n\n    const authorizationRequest = new AuthorizationRequest(this.identifier, client, redirectUri);\n\n    authorizationRequest.state = stateParameter;\n\n    authorizationRequest.scopes = scopes;\n\n    const codeChallenge = this.getQueryStringParameter(\"code_challenge\", request);\n\n    if (this.options.requiresPKCE && !codeChallenge) {\n      throw OAuthException.invalidRequest(\n        \"code_challenge\",\n        \"The authorization server requires public clients to use PKCE RFC-7636\",\n      );\n    }\n\n    if (codeChallenge) {\n      const codeChallengeMethod = this.getQueryStringParameter(\"code_challenge_method\", request, \"plain\");\n\n      authorizationRequest.codeChallenge = codeChallenge;\n\n      authorizationRequest.codeChallengeMethod = codeChallengeMethod;\n    }\n\n    return authorizationRequest;\n  }\n\n  async completeAuthorizationRequest(authorizationRequest: AuthorizationRequest): Promise<ResponseInterface> {\n    if (!authorizationRequest.user) {\n      throw OAuthException.logicException(\"A user should be set on the authorization request\");\n    }\n\n    const redirectUri = authorizationRequest.redirectUri;\n\n    if (!redirectUri) {\n      throw OAuthException.invalidRequest(\"redirect_uri\");\n    }\n\n    if (!authorizationRequest.isAuthorizationApproved) {\n      throw OAuthException.logicException(\"Authorization is not approved\");\n    }\n\n    const authCode = await this.issueAuthCode(\n      this.authCodeTTL,\n      authorizationRequest.client,\n      authorizationRequest.user.id,\n      authorizationRequest.redirectUri,\n      authorizationRequest.codeChallenge,\n      authorizationRequest.codeChallengeMethod,\n      authorizationRequest.scopes,\n    );\n\n    const payload: IAuthCodePayload = {\n      client_id: authCode.client.id,\n      redirect_uri: authCode.redirectUri,\n      auth_code_id: authCode.code,\n      scopes: authCode.scopes.map(scope => scope.name),\n      user_id: authCode.user?.id,\n      expire_time: this.authCodeTTL.getEndTimeSeconds(),\n      code_challenge: authorizationRequest.codeChallenge,\n      code_challenge_method: authorizationRequest.codeChallengeMethod,\n    };\n\n    const jsonPayload = JSON.stringify(payload);\n\n    const code = await this.encrypt(jsonPayload);\n\n    const finalRedirectUri = this.makeRedirectUrl(redirectUri, {\n      code,\n      state: authorizationRequest.state,\n    });\n\n    return new RedirectResponse(finalRedirectUri);\n  }\n\n  private async validateAuthorizationCode(payload: any, client: OAuthClient, request: RequestInterface) {\n    if (!payload.auth_code_id) {\n      throw OAuthException.invalidRequest(\"code\", \"Authorization code malformed\");\n    }\n\n    const isCodeRevoked = await this.authCodeRepository.isRevoked(payload.auth_code_id);\n\n    if (Date.now() / 1000 > payload.expire_time || isCodeRevoked) {\n      throw OAuthException.invalidRequest(\"code\", \"Authorization code is expired or revoked\");\n    }\n\n    if (payload.client_id !== client.id) {\n      throw OAuthException.invalidRequest(\"code\", \"Authorization code was not issued to this client\");\n    }\n\n    const redirectUri = this.getRequestParameter(\"redirect_uri\", request);\n    if (!!payload.redirect_uri && !redirectUri) {\n      throw OAuthException.invalidRequest(\"redirect_uri\");\n    }\n\n    if (payload.redirect_uri !== redirectUri) {\n      throw OAuthException.invalidRequest(\"redirect_uri\", \"Invalid redirect URI\");\n    }\n    return payload;\n  }\n\n  private async issueAuthCode(\n    authCodeTTL: DateInterval,\n    client: OAuthClient,\n    userIdentifier?: string,\n    redirectUri?: string,\n    codeChallenge?: string,\n    codeChallengeMethod?: string,\n    scopes: OAuthScope[] = [],\n  ): Promise<OAuthAuthCode> {\n    const user = userIdentifier ? await this.userRepository.getUserByCredentials(userIdentifier) : undefined;\n\n    const authCode = await this.authCodeRepository.issueAuthCode(client, user, scopes);\n    authCode.expiresAt = authCodeTTL.getEndDate();\n    authCode.redirectUri = redirectUri;\n    authCode.codeChallenge = codeChallenge;\n    authCode.codeChallengeMethod = codeChallengeMethod;\n    authCode.scopes = [];\n    scopes.forEach(scope => authCode.scopes.push(scope));\n    await this.authCodeRepository.persist(authCode);\n    return authCode;\n  }\n}\n","import { RequestInterface } from \"../requests/request\";\nimport { ResponseInterface } from \"../responses/response\";\nimport { DateInterval } from \"../utils/date_interval\";\nimport { AbstractGrant } from \"./abstract/abstract.grant\";\n\nexport class ClientCredentialsGrant extends AbstractGrant {\n  readonly identifier = \"client_credentials\";\n\n  async respondToAccessTokenRequest(\n    request: RequestInterface,\n    response: ResponseInterface,\n    accessTokenTTL: DateInterval,\n  ): Promise<ResponseInterface> {\n    const client = await this.validateClient(request);\n\n    const bodyScopes = this.getRequestParameter(\"scope\", request, []);\n\n    const validScopes = await this.validateScopes(bodyScopes);\n\n    const user = undefined;\n\n    const accessToken = await this.issueAccessToken(accessTokenTTL, client, user, validScopes);\n\n    return await this.makeBearerTokenResponse(client, accessToken, validScopes);\n  }\n}\n","import { OAuthException } from \"../exceptions/oauth.exception\";\nimport { AuthorizationRequest } from \"../requests/authorization.request\";\nimport { RequestInterface } from \"../requests/request\";\nimport { RedirectResponse } from \"../responses/redirect.response\";\nimport { ResponseInterface } from \"../responses/response\";\nimport { DateInterval } from \"../utils/date_interval\";\nimport { getSecondsUntil } from \"../utils/time\";\nimport { AbstractAuthorizedGrant } from \"./abstract/abstract_authorized.grant\";\n\nexport class ImplicitGrant extends AbstractAuthorizedGrant {\n  readonly identifier = \"implicit\";\n\n  private accessTokenTTL: DateInterval = new DateInterval(\"1h\");\n\n  respondToAccessTokenRequest(\n    req: RequestInterface, // eslint-disable-line @typescript-eslint/no-unused-vars\n    res: ResponseInterface, // eslint-disable-line @typescript-eslint/no-unused-vars\n    tokenTTL: DateInterval, // eslint-disable-line @typescript-eslint/no-unused-vars\n  ): Promise<ResponseInterface> {\n    throw OAuthException.logicException(\"The implicit grant can't respond to access token requests\");\n  }\n\n  canRespondToAccessTokenRequest(request: RequestInterface): boolean {\n    const clientId = this.getQueryStringParameter(\"client_id\", request);\n    return this.getQueryStringParameter(\"response_type\", request) === \"token\" && !!clientId;\n  }\n\n  async validateAuthorizationRequest(request: RequestInterface): Promise<AuthorizationRequest> {\n    const clientId = this.getQueryStringParameter(\"client_id\", request);\n\n    if (!clientId) {\n      throw OAuthException.invalidRequest(\"client_id\");\n    }\n\n    const client = await this.clientRepository.getByIdentifier(clientId);\n\n    if (!client) {\n      throw OAuthException.invalidClient();\n    }\n\n    const redirectUri = this.getRedirectUri(request, client);\n\n    const scopes = await this.validateScopes(\n      this.getQueryStringParameter(\"scope\", request, []), // @see about this.defaultSCopes as third param\n      redirectUri,\n    );\n\n    const state = this.getQueryStringParameter(\"state\", request);\n\n    const authorizationRequest = new AuthorizationRequest(this.identifier, client, redirectUri);\n\n    authorizationRequest.state = state;\n\n    authorizationRequest.scopes = scopes;\n\n    return authorizationRequest;\n  }\n\n  async completeAuthorizationRequest(authorizationRequest: AuthorizationRequest): Promise<ResponseInterface> {\n    if (!authorizationRequest.user || !authorizationRequest.user?.id) {\n      throw OAuthException.logicException(\"A user must be set on the AuthorizationRequest\");\n    }\n\n    let finalRedirectUri = authorizationRequest.redirectUri;\n\n    if (!finalRedirectUri) {\n      finalRedirectUri = authorizationRequest.client?.redirectUris[0];\n    }\n\n    if (!finalRedirectUri) {\n      throw OAuthException.invalidRequest(\n        \"redirect_uri\",\n        \"Neither the request nor the client contain a valid refresh token\",\n      );\n    }\n\n    if (!authorizationRequest.isAuthorizationApproved) {\n      throw OAuthException.accessDenied();\n    }\n\n    const finalizedScopes = await this.scopeRepository.finalize(\n      authorizationRequest.scopes,\n      this.identifier,\n      authorizationRequest.client,\n      authorizationRequest.user.id,\n    );\n\n    const accessToken = await this.issueAccessToken(\n      this.accessTokenTTL,\n      authorizationRequest.client,\n      authorizationRequest.user,\n      finalizedScopes,\n    );\n\n    const extraFields = authorizationRequest.user\n      ? await this.userRepository.extraAccessTokenFields?.(authorizationRequest.user)\n      : undefined;\n\n    const encryptedAccessToken = await this.encryptAccessToken(\n      authorizationRequest.client,\n      accessToken,\n      authorizationRequest.scopes,\n      extraFields ?? {},\n    );\n\n    return new RedirectResponse(\n      this.makeRedirectUrl(finalRedirectUri, {\n        access_token: encryptedAccessToken,\n        token_type: \"Bearer\",\n        expires_in: getSecondsUntil(accessToken.accessTokenExpiresAt),\n        state: authorizationRequest.state,\n      }),\n    );\n  }\n}\n","import { OAuthClient } from \"../entities/client.entity\";\nimport { OAuthUser } from \"../entities/user.entity\";\nimport { OAuthException } from \"../exceptions/oauth.exception\";\nimport { RequestInterface } from \"../requests/request\";\nimport { ResponseInterface } from \"../responses/response\";\nimport { DateInterval } from \"../utils/date_interval\";\nimport { AbstractGrant } from \"./abstract/abstract.grant\";\n\nexport class PasswordGrant extends AbstractGrant {\n  readonly identifier = \"password\";\n\n  async respondToAccessTokenRequest(\n    request: RequestInterface,\n    response: ResponseInterface,\n    accessTokenTTL: DateInterval,\n  ): Promise<ResponseInterface> {\n    const client = await this.validateClient(request);\n\n    const bodyScopes = this.getRequestParameter(\"scope\", request, []);\n\n    const user = await this.validateUser(request, client);\n\n    const finalizedScopes = await this.scopeRepository.finalize(\n      await this.validateScopes(bodyScopes),\n      this.identifier,\n      client,\n      user.id,\n    );\n\n    let accessToken = await this.issueAccessToken(accessTokenTTL, client, user, finalizedScopes);\n\n    accessToken = await this.issueRefreshToken(accessToken);\n\n    const extraJwtFields = await this.userRepository.extraAccessTokenFields?.(user);\n\n    return await this.makeBearerTokenResponse(client, accessToken, finalizedScopes, extraJwtFields);\n  }\n\n  private async validateUser(request: RequestInterface, client: OAuthClient): Promise<OAuthUser> {\n    const username = this.getRequestParameter(\"username\", request);\n\n    if (!username) {\n      throw OAuthException.invalidRequest(\"username\");\n    }\n\n    const password = this.getRequestParameter(\"password\", request);\n\n    if (!password) {\n      throw OAuthException.invalidRequest(\"password\");\n    }\n\n    const user = await this.userRepository.getUserByCredentials(username, password, this.identifier, client);\n\n    if (!user) {\n      throw OAuthException.invalidGrant();\n    }\n\n    return user;\n  }\n}\n","import { OAuthToken } from \"../entities/token.entity\";\nimport { OAuthException } from \"../exceptions/oauth.exception\";\nimport { RequestInterface } from \"../requests/request\";\nimport { ResponseInterface } from \"../responses/response\";\nimport { DateInterval } from \"../utils/date_interval\";\nimport { AbstractGrant } from \"./abstract/abstract.grant\";\n\nexport class RefreshTokenGrant extends AbstractGrant {\n  readonly identifier = \"refresh_token\";\n\n  async respondToAccessTokenRequest(\n    request: RequestInterface,\n    response: ResponseInterface,\n    accessTokenTTL: DateInterval,\n  ): Promise<ResponseInterface> {\n    const client = await this.validateClient(request);\n\n    const oldToken = await this.validateOldRefreshToken(request, client.id);\n\n    const user = oldToken.user;\n\n    const scopes = await this.validateScopes(\n      this.getRequestParameter(\n        \"scope\",\n        request,\n        oldToken.scopes.map(s => s.name),\n      ),\n    );\n\n    scopes.forEach(scope => {\n      if (!oldToken.scopes.map(scope => scope.name).includes(scope.name)) {\n        throw OAuthException.invalidScope(scope.name);\n      }\n    });\n\n    await this.tokenRepository.revoke(oldToken);\n\n    let newToken = await this.issueAccessToken(accessTokenTTL, client, user, scopes);\n\n    newToken = await this.issueRefreshToken(newToken);\n\n    const extraJwtFields = user ? await this.userRepository.extraAccessTokenFields?.(user) : undefined;\n\n    return await this.makeBearerTokenResponse(client, newToken, scopes, extraJwtFields);\n  }\n\n  private async validateOldRefreshToken(request: RequestInterface, clientId: string): Promise<OAuthToken> {\n    const encryptedRefreshToken = this.getRequestParameter(\"refresh_token\", request);\n\n    if (!encryptedRefreshToken) {\n      throw OAuthException.invalidRequest(\"refresh_token\");\n    }\n\n    let refreshTokenData: any;\n\n    try {\n      refreshTokenData = await this.decrypt(encryptedRefreshToken);\n    } catch (e) {\n      if (e.message === \"invalid signature\") {\n        throw OAuthException.invalidRequest(\"refresh_token\", \"Cannot verify the refresh token\");\n      }\n      throw OAuthException.invalidRequest(\"refresh_token\", \"Cannot decrypt the refresh token\");\n    }\n\n    if (!refreshTokenData?.refresh_token_id) {\n      throw OAuthException.invalidRequest(\"refresh_token\", \"Token missing\");\n    }\n\n    if (refreshTokenData?.client_id !== clientId) {\n      throw OAuthException.invalidRequest(\"refresh_token\", \"Token is not linked to client\");\n    }\n\n    if (Date.now() / 1000 > refreshTokenData?.expire_time) {\n      throw OAuthException.invalidRequest(\"refresh_token\", \"Token has expired\");\n    }\n\n    const refreshToken = await this.tokenRepository.getByRefreshToken(refreshTokenData.refresh_token_id);\n\n    if (await this.tokenRepository.isRefreshTokenRevoked(refreshToken)) {\n      throw OAuthException.invalidRequest(\"refresh_token\", \"Token has been revoked\");\n    }\n\n    return refreshToken;\n  }\n}\n","import { OAuthException } from \"./exceptions/oauth.exception\";\nimport { GrantIdentifier, GrantInterface } from \"./grants/abstract/grant.interface\";\nimport { AuthCodeGrant } from \"./grants/auth_code.grant\";\nimport { ClientCredentialsGrant } from \"./grants/client_credentials.grant\";\nimport { ImplicitGrant } from \"./grants/implicit.grant\";\nimport { PasswordGrant } from \"./grants/password.grant\";\nimport { RefreshTokenGrant } from \"./grants/refresh_token.grant\";\nimport { OAuthTokenRepository } from \"./repositories/access_token.repository\";\nimport { OAuthAuthCodeRepository } from \"./repositories/auth_code.repository\";\nimport { OAuthClientRepository } from \"./repositories/client.repository\";\nimport { OAuthScopeRepository } from \"./repositories/scope.repository\";\nimport { OAuthUserRepository } from \"./repositories/user.repository\";\nimport { AuthorizationRequest } from \"./requests/authorization.request\";\nimport { RequestInterface } from \"./requests/request\";\nimport { ResponseInterface } from \"./responses/response\";\nimport { DateInterval } from \"./utils/date_interval\";\nimport { JwtInterface } from \"./utils/jwt\";\n\nexport interface AuthorizationServerOptions {\n  requiresPKCE: boolean;\n}\n\nexport class AuthorizationServer {\n  private readonly enabledGrantTypes: { [key: string]: GrantInterface } = {};\n  private readonly grantTypeAccessTokenTTL: { [key: string]: DateInterval } = {};\n\n  private readonly availableGrants: { [key in GrantIdentifier]: GrantInterface } = {\n    authorization_code: new AuthCodeGrant(\n      this.authCodeRepository,\n      this.clientRepository,\n      this.tokenRepository,\n      this.scopeRepository,\n      this.userRepository,\n      this.jwt,\n    ),\n    client_credentials: new ClientCredentialsGrant(\n      this.authCodeRepository,\n      this.clientRepository,\n      this.tokenRepository,\n      this.scopeRepository,\n      this.userRepository,\n      this.jwt,\n    ),\n    implicit: new ImplicitGrant(\n      this.authCodeRepository,\n      this.clientRepository,\n      this.tokenRepository,\n      this.scopeRepository,\n      this.userRepository,\n      this.jwt,\n    ),\n    password: new PasswordGrant(\n      this.authCodeRepository,\n      this.clientRepository,\n      this.tokenRepository,\n      this.scopeRepository,\n      this.userRepository,\n      this.jwt,\n    ),\n    refresh_token: new RefreshTokenGrant(\n      this.authCodeRepository,\n      this.clientRepository,\n      this.tokenRepository,\n      this.scopeRepository,\n      this.userRepository,\n      this.jwt,\n    ),\n  };\n\n  private options: AuthorizationServerOptions;\n\n  constructor(\n    private readonly authCodeRepository: OAuthAuthCodeRepository,\n    private readonly clientRepository: OAuthClientRepository,\n    private readonly tokenRepository: OAuthTokenRepository,\n    private readonly scopeRepository: OAuthScopeRepository,\n    private readonly userRepository: OAuthUserRepository,\n    private readonly jwt: JwtInterface,\n    options?: Partial<AuthorizationServerOptions>,\n  ) {\n    this.setOptions(options);\n  }\n\n  setOptions(options: Partial<AuthorizationServerOptions> = {}) {\n    this.options = {\n      requiresPKCE: true,\n      ...options,\n    };\n  }\n\n  enableGrantType(grantType: GrantIdentifier, accessTokenTTL: DateInterval = new DateInterval(\"1h\")): void {\n    const grant = this.availableGrants[grantType];\n    grant.options = this.options;\n    this.enabledGrantTypes[grantType] = grant;\n    this.grantTypeAccessTokenTTL[grantType] = accessTokenTTL;\n  }\n\n  respondToAccessTokenRequest(req: RequestInterface, res: ResponseInterface): Promise<ResponseInterface> {\n    for (const grantType of Object.values(this.enabledGrantTypes)) {\n      if (!grantType.canRespondToAccessTokenRequest(req)) {\n        continue;\n      }\n      const accessTokenTTL = this.grantTypeAccessTokenTTL[grantType.identifier];\n      return grantType.respondToAccessTokenRequest(req, res, accessTokenTTL);\n    }\n\n    throw OAuthException.unsupportedGrantType();\n  }\n\n  validateAuthorizationRequest(req: RequestInterface): Promise<AuthorizationRequest> {\n    for (const grant of Object.values(this.enabledGrantTypes)) {\n      if (grant.canRespondToAuthorizationRequest(req)) {\n        return grant.validateAuthorizationRequest(req);\n      }\n    }\n\n    throw OAuthException.unsupportedGrantType();\n  }\n\n  async completeAuthorizationRequest(authorizationRequest: AuthorizationRequest): Promise<ResponseInterface> {\n    const grant = this.enabledGrantTypes[authorizationRequest.grantTypeId];\n    return await grant.completeAuthorizationRequest(authorizationRequest);\n  }\n\n  /**\n   * I am only using this in testing... should it be here?\n   * @param grantType\n   */\n  getGrant(grantType: GrantIdentifier): any {\n    return this.availableGrants[grantType];\n  }\n}\n","import { Headers, Options } from \"../responses/response\";\n\nexport interface RequestInterface {\n  headers: { [key: string]: any };\n  query: { [key: string]: any };\n  body: { [key: string]: any };\n}\n\nexport class OAuthRequest implements RequestInterface {\n  body: { [key: string]: any };\n  headers: Headers = {};\n  query: { [key: string]: any };\n\n  constructor(options: Options = {}) {\n    this.headers = {\n      ...options.headers,\n    };\n    this.query = {\n      ...options.query,\n    };\n    this.body = {\n      ...options.body,\n    };\n  }\n\n  set(fieldOrHeaders: string, value: any): void {\n    this.headers[fieldOrHeaders.toLowerCase()] = value;\n  }\n}\n","import jwt, { Secret, SignOptions, VerifyOptions } from \"jsonwebtoken\";\n\nexport interface JwtInterface {\n  verify(token: string, options?: VerifyOptions): Promise<Record<string, unknown>>;\n  decode(encryptedData: string): null | { [key: string]: any } | string;\n  sign(payload: string | Buffer | Record<string, unknown>, options?: SignOptions): Promise<string>;\n}\n\nexport class JwtService implements JwtInterface {\n  constructor(private readonly secretOrPrivateKey: Secret) {}\n\n  /**\n   * Asynchronously verify given token using a secret or a public key to get a decoded token\n   */\n  verify(token: string, options: VerifyOptions = {}): Promise<Record<string, unknown>> {\n    return new Promise((resolve, reject) => {\n      jwt.verify(token, this.secretOrPrivateKey, options, (err, decoded: any) => {\n        if (decoded) resolve(decoded);\n        else reject(err);\n      });\n    });\n  }\n\n  /**\n   * Returns the decoded payload without verifying if the signature is valid.\n   */\n  decode(encryptedData: string): null | { [key: string]: any } | string {\n    return jwt.decode(encryptedData);\n  }\n\n  /**\n   * Sign the given payload into a JSON Web Token string\n   */\n  sign(payload: string | Buffer | Record<string, unknown>): Promise<string> {\n    return new Promise((resolve, reject) => {\n      jwt.sign(payload, this.secretOrPrivateKey, (err, encoded) => {\n        if (encoded) resolve(encoded);\n        else reject(err);\n      });\n    });\n  }\n}\n"],"names":["ErrorType","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","HttpStatus","NOT_ACCEPTABLE","BAD_REQUEST","UNAUTHORIZED","INTERNAL_SERVER_ERROR","OK","OAuthException","errorType","errorDescription","errorUri","status","captureStackTrace","_this","invalidRequest","parameter","message","InvalidRequest","invalidClient","InvalidClient","invalidGrant","InvalidGrant","invalidScope","scope","redirectUri","hint","InvalidScope","unauthorizedClient","UnauthorizedClient","unsupportedGrantType","UnsupportedGrantType","logicException","accessDenied","AccessDenied","PlainVerifier","verifyCodeChallenge","codeVerifier","codeChallenge","base64encode","str","Buffer","from","base64decode","base64urlencode","replace","S256Verifier","crypto","createHash","update","digest","AuthorizationRequest","grantTypeId","client","user","scopes","isAuthorizationApproved","redirectUris","OAuthResponse","responseOptions","headers","get","field","console","log","set","fieldOrHeaders","toLowerCase","RedirectResponse","options","DateInterval","interval","ms","getEndDate","Date","getEndTimeMs","now","getEndTimeSeconds","Math","ceil","getSeconds","getDateEnd","isClientConfidential","secret","BearerTokenResponse","accessToken","arrayDiff","arr1","arr2","filter","x","includes","getSecondsUntil","date","roundToSeconds","getTime","AbstractGrant","authCodeRepository","clientRepository","tokenRepository","scopeRepository","userRepository","jwt","requiresPKCE","makeBearerTokenResponse","extraJwtFields","map","join","scopeDelimiterString","encryptAccessToken","encryptedAccessToken","encryptedRefreshToken","refreshToken","encryptRefreshToken","bearerTokenResponse","body","token_type","expires_in","accessTokenExpiresAt","access_token","refresh_token","expiresAtMs","refreshTokenExpiresAt","_refreshToken$refresh2","encrypt","client_id","id","access_token_id","refresh_token_id","user_id","_refreshToken$user","expire_time","cid","iss","sub","_accessToken$user","aud","exp","nbf","iat","jti","validateClient","request","getClientCredentials","clientId","clientSecret","grantType","getGrantType","getByIdentifier","isClientValid","getBasicAuthCredentials","basicAuthPass","getRequestParameter","Array","isArray","_request$headers","header","startsWith","decoded","substr","split","validateScopes","getAllByIdentifiers","invalidScopes","validScopes","issueAccessToken","accessTokenTTL","issueToken","persist","issueRefreshToken","getQueryStringParameter","supportedGrantTypes","identifier","param","defaultValue","_request$body","query","_request$query","unencryptedData","sign","decrypt","encryptedData","verify","validateAuthorizationRequest","canRespondToAccessTokenRequest","canRespondToAuthorizationRequest","completeAuthorizationRequest","authorizationRequest","respondToAccessTokenRequest","req","res","tokenTTL","AbstractAuthorizedGrant","makeRedirectUrl","uri","params","queryDelimiter","querystring","stringify","getRedirectUri","validateRedirectUri","parsed","parse","scheme","fragment","REGEXP_CODE_VERIFIER","AuthCodeGrant","plain","S256","response","encryptedAuthCode","decryptedCode","validateAuthorizationCode","userId","validatedPayload","getUserByCredentials","finalize","auth_code_id","authCode","code_challenge","test","verifier","codeChallengeVerifiers","codeChallengeMethod","code_challenge_method","revoke","extraAccessTokenFields","_this$userRepository$","responseType","hasClientId","bodyScopes","stateParameter","issueAuthCode","authCodeTTL","payload","redirect_uri","code","_authCode$user","jsonPayload","JSON","finalRedirectUri","isRevoked","isCodeRevoked","userIdentifier","expiresAt","ClientCredentialsGrant","ImplicitGrant","_authorizationRequest","_authorizationRequest2","finalizedScopes","extraFields","PasswordGrant","validateUser","username","password","RefreshTokenGrant","validateOldRefreshToken","oldToken","s","newToken","refreshTokenData","_context2","_refreshTokenData","_refreshTokenData3","getByRefreshToken","isRefreshTokenRevoked","AuthorizationServer","authorization_code","client_credentials","implicit","setOptions","enableGrantType","grant","availableGrants","enabledGrantTypes","grantTypeAccessTokenTTL","getGrant","OAuthRequest","JwtService","secretOrPrivateKey","token","decode","_this2","encoded"],"mappings":"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"}