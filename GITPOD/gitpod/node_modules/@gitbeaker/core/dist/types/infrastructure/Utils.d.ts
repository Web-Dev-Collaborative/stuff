import * as FormData from 'form-data';
interface Constructor {
    new (...args: any): any;
}
declare type Mapper<T extends {
    [name: string]: Constructor;
}, P extends keyof T> = {
    [name in P]: InstanceType<T[name]>;
};
export interface BundleType<T extends {
    [name: string]: Constructor;
}, P extends keyof T> {
    new (options?: any): Mapper<T, P>;
}
export declare function bundler<T extends {
    [name: string]: Constructor;
}, P extends keyof T>(services: T): BundleType<T, P>;
export declare function appendFormFromObject(object: Record<string, unknown>): FormData;
export {};
