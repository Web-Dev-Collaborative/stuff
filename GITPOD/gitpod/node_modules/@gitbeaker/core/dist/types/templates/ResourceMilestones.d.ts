import { BaseService, BaseServiceOptions } from '@gitbeaker/requester-utils';
import { PaginatedRequestOptions, BaseRequestOptions, Sudo } from '../infrastructure';
export declare class ResourceMilestones extends BaseService {
    constructor(resourceType: string, options: BaseServiceOptions);
    all(resourceId: string | number, options?: PaginatedRequestOptions): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    create(resourceId: string | number, title: string, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
    edit(resourceId: string | number, milestoneId: number, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
    issues(resourceId: string | number, milestoneId: number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    mergeRequests(resourceId: string | number, milestoneId: number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    show(resourceId: string | number, milestoneId: number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
}
