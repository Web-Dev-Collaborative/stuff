import { BaseService, BaseServiceOptions } from '@gitbeaker/requester-utils';
import { BaseRequestOptions, PaginatedRequestOptions, Sudo } from '../infrastructure';
export declare class ResourceDiscussions extends BaseService {
    protected resource2Type: string;
    constructor(resourceType: string, resource2Type: string, options: BaseServiceOptions);
    addNote(resourceId: string | number, resource2Id: string | number, discussionId: string | number, noteId: number, content: string, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
    all(resourceId: string | number, resource2Id: string | number, options?: PaginatedRequestOptions): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    create(resourceId: string | number, resource2Id: string | number, content: string, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
    editNote(resourceId: string | number, resource2Id: string | number, discussionId: string | number, noteId: number, content: string, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
    removeNote(resourceId: string | number, resource2Id: string | number, discussionId: string | number, noteId: number, options?: Sudo): Promise<Record<string, unknown>>;
    show(resourceId: string | number, resource2Id: string | number, discussionId: string | number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
}
