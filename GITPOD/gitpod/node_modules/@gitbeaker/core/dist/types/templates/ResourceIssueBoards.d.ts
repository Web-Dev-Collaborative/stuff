import { BaseService } from '@gitbeaker/requester-utils';
import { BaseRequestOptions, PaginatedRequestOptions, Sudo } from '../infrastructure';
export declare class ResourceIssueBoards extends BaseService {
    constructor(resourceType: string, options: any);
    all(resourceId: string | number, options?: PaginatedRequestOptions): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    create(resourceId: string | number, name: string, options?: Sudo): Promise<Record<string, unknown>>;
    createList(resourceId: string | number, boardId: number, labelId: number, options?: Sudo): Promise<Record<string, unknown>>;
    edit(resourceId: string | number, boardId: number, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
    editList(resourceId: string | number, boardId: number, listId: number, position: number, options?: Sudo): Promise<Record<string, unknown>>;
    lists(resourceId: string | number, boardId: number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    remove(resourceId: string | number, boardId: number, options?: Sudo): Promise<Record<string, unknown>>;
    removeList(resourceId: string | number, boardId: number, listId: number, options?: Sudo): Promise<Record<string, unknown>>;
    show(resourceId: string | number, boardId: number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    showList(resourceId: string | number, boardId: number, listId: number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
}
