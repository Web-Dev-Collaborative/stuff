import { BaseService } from '@gitbeaker/requester-utils';
import { BaseRequestOptions, PaginatedRequestOptions, Sudo } from '../infrastructure';
import { SnippetVisibility } from './Snippets';
export declare class ProjectSnippets extends BaseService {
    all(projectId: string | number, options?: PaginatedRequestOptions): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    content(projectId: string | number, snippetId: number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    create(projectId: string | number, title: string, fileName: string, code: string, visibility: SnippetVisibility, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
    edit(projectId: string | number, snippetId: number, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
    remove(projectId: string | number, snippetId: number, options?: Sudo): Promise<Record<string, unknown>>;
    show(projectId: string | number, snippetId: number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    userAgentDetails(projectId: string | number, snippetId: number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
}
