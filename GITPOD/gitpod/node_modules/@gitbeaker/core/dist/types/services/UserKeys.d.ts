import { BaseService } from '@gitbeaker/requester-utils';
import { BaseRequestOptions, PaginatedRequestOptions } from '../infrastructure';
export declare class UserKeys extends BaseService {
    all({ userId, ...options }?: {
        userId?: number;
    } & PaginatedRequestOptions): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    create(title: any, key: any, { userId, ...options }?: {
        userId?: number;
    } & BaseRequestOptions): Promise<Record<string, unknown>>;
    show(keyId: any, options?: BaseRequestOptions): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    remove(keyId: any, { userId, ...options }?: {
        userId?: number;
    } & BaseRequestOptions): Promise<Record<string, unknown>>;
}
