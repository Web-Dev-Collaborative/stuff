import { BaseService } from '@gitbeaker/requester-utils';
import { BaseRequestOptions } from '../infrastructure';
export interface CreateFreezePeriodOptions {
    cronTimezone?: string;
}
export interface EditFreezePeriodOptions {
    cronTimezone?: string;
    freezeStart?: string;
    freezeEnd?: string;
}
export declare class FreezePeriods extends BaseService {
    all(projectId: string | number, options?: BaseRequestOptions): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    show(projectId: string | number, freezePeriodId: number, options?: BaseRequestOptions): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    create(projectId: number | string, freezeStart: string, freezeEnd: string, options?: CreateFreezePeriodOptions & BaseRequestOptions): Promise<Record<string, unknown>>;
    edit(projectId: number | string, freezePeriodId: number, options?: EditFreezePeriodOptions & BaseRequestOptions): Promise<Record<string, unknown>>;
    delete(projectId: number | string, freezePeriodId: number, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
}
