import { BaseService } from '@gitbeaker/requester-utils';
import { Sudo, BaseRequestOptions } from '../infrastructure';
export interface UploadMetadata {
    filename?: string;
    contentType?: string;
}
export declare const defaultMetadata: {
    filename: string;
    contentType: string;
};
export declare class ProjectImportExport extends BaseService {
    download(projectId: string | number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    exportStatus(projectId: string | number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    import(content: string, path: string, { metadata, ...options }?: {
        metadata?: UploadMetadata;
    } & BaseRequestOptions): Promise<Record<string, unknown>>;
    importStatus(projectId: string | number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    schedule(projectId: string | number, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
}
