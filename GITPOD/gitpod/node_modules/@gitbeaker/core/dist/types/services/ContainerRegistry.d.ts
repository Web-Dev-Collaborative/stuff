import { BaseService } from '@gitbeaker/requester-utils';
import { PaginatedRequestOptions, Sudo } from '../infrastructure';
export declare class ContainerRegistry extends BaseService {
    repositories(projectId: string | number, options?: PaginatedRequestOptions): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    tags(projectId: string | number, repositoryId: number, options?: PaginatedRequestOptions): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    removeRepository(projectId: string | number, repositoryId: number, options?: Sudo): Promise<Record<string, unknown>>;
    removeTag(projectId: string | number, repositoryId: number, tagName: string, options?: Sudo): Promise<Record<string, unknown>>;
    removeTags(projectId: string | number, repositoryId: number, nameRegexDelete: string, options?: Sudo & {
        nameRegexKeep: string;
        keepN: string;
        olderThan: string;
    }): Promise<Record<string, unknown>>;
    showTag(projectId: string | number, repositoryId: number, tagName: string, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
}
