import { BaseService } from '@gitbeaker/requester-utils';
import { BaseRequestOptions, PaginatedRequestOptions, Sudo } from '../infrastructure';
export declare class Triggers extends BaseService {
    add(projectId: string | number, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
    all(projectId: string | number, options?: PaginatedRequestOptions): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    edit(projectId: string | number, triggerId: number, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
    pipeline(projectId: string | number, ref: string, token: string, { variables }?: {
        variables?: Record<string, string>;
    }): Promise<Record<string, unknown>>;
    remove(projectId: string | number, triggerId: number, options?: Sudo): Promise<Record<string, unknown>>;
    show(projectId: string | number, triggerId: number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
}
