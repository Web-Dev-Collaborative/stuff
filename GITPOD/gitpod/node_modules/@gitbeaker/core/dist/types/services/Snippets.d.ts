import { BaseService } from '@gitbeaker/requester-utils';
import { BaseRequestOptions, PaginatedRequestOptions, Sudo } from '../infrastructure';
export declare type SnippetVisibility = 'private' | 'public' | 'internal';
export declare class Snippets extends BaseService {
    all({ public: p, ...options }?: {
        public?: boolean;
    } & PaginatedRequestOptions): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    content(snippetId: number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    create(title: string, fileName: string, content: string, visibility: SnippetVisibility, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
    edit(snippetId: number, options?: BaseRequestOptions): Promise<Record<string, unknown>>;
    remove(snippetId: number, options?: Sudo): Promise<Record<string, unknown>>;
    show(snippetId: number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
    userAgentDetails(snippetId: number, options?: Sudo): Promise<Record<string, unknown> | Record<string, unknown>[]>;
}
