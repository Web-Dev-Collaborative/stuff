'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var xcase = require('xcase');
var queryString = require('query-string');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

// Utility methods
function formatQuery(params) {
    if (params === void 0) { params = {}; }
    var decamelized = xcase.decamelizeKeys(params);
    if (decamelized.not)
        decamelized.not = JSON.stringify(decamelized.not);
    return queryString.stringify(decamelized, { arrayFormat: 'bracket' });
}
function defaultRequest(service, _a) {
    var _b = _a === void 0 ? {} : _a, body = _b.body, query = _b.query, sudo = _b.sudo, _c = _b.method, method = _c === void 0 ? 'get' : _c;
    var headers = service.headers;
    var bod;
    if (sudo)
        headers.sudo = sudo;
    // FIXME: Not the best comparison, but...it will have to do for now.
    if (typeof body === 'object' && body.constructor.name !== 'FormData') {
        bod = JSON.stringify(xcase.decamelizeKeys(body));
        headers['content-type'] = 'application/json';
    }
    else {
        bod = body;
    }
    return {
        headers: headers,
        timeout: service.requestTimeout,
        method: method,
        searchParams: formatQuery(query),
        prefixUrl: service.url,
        body: bod,
    };
}
function createInstance(optionsHandler, requestHandler) {
    var requester = {};
    var methods = ['get', 'post', 'put', 'delete', 'stream'];
    methods.forEach(function (m) {
        /* eslint func-names:0 */
        requester[m] = function (service, endpoint, options) {
            var requestOptions = optionsHandler(service, __assign(__assign({}, options), { method: m }));
            return requestHandler(endpoint, requestOptions);
        };
    });
    return requester;
}
function extendClass(Base, customConfig) {
    return /** @class */ (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var options = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                options[_i] = arguments[_i];
            }
            var _this = this;
            var _a = __read(options), config = _a[0], opts = _a.slice(1);
            _this = _super.apply(this, __spread([__assign(__assign({}, customConfig), config)], opts)) || this;
            return _this;
        }
        return class_1;
    }(Base));
}
function modifyServices(services, customConfig) {
    if (customConfig === void 0) { customConfig = {}; }
    var updated = {};
    Object.entries(services).forEach(function (_a) {
        var _b = __read(_a, 2), k = _b[0], s = _b[1];
        updated[k] = extendClass(s, customConfig);
    });
    return updated;
}
function wait(ms) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, new Promise(function (resolve) { return setTimeout(resolve, ms); })];
        });
    });
}

var BaseService = /** @class */ (function () {
    function BaseService(_a) {
        var _b = _a === void 0 ? {} : _a, token = _b.token, jobToken = _b.jobToken, oauthToken = _b.oauthToken, sudo = _b.sudo, profileToken = _b.profileToken, requester = _b.requester, _c = _b.profileMode, profileMode = _c === void 0 ? 'execution' : _c, _d = _b.host, host = _d === void 0 ? 'https://gitlab.com' : _d, _e = _b.url, url = _e === void 0 ? '' : _e, _f = _b.version, version = _f === void 0 ? 4 : _f, _g = _b.camelize, camelize = _g === void 0 ? false : _g, _h = _b.rejectUnauthorized, rejectUnauthorized = _h === void 0 ? true : _h, _j = _b.requestTimeout, requestTimeout = _j === void 0 ? 300000 : _j;
        if (!requester)
            throw new ReferenceError('Requester must be passed');
        this.url = [host, 'api', "v" + version, url].join('/');
        this.headers = {
            'user-agent': 'gitbeaker',
        };
        this.rejectUnauthorized = rejectUnauthorized;
        this.camelize = camelize;
        this.requester = requester;
        this.requestTimeout = requestTimeout;
        // Handle auth tokens
        if (oauthToken)
            this.headers.authorization = "Bearer " + oauthToken;
        else if (jobToken)
            this.headers['job-token'] = jobToken;
        else if (token)
            this.headers['private-token'] = token;
        // Profiling
        if (profileToken) {
            this.headers['X-Profile-Token'] = profileToken;
            this.headers['X-Profile-Mode'] = profileMode;
        }
        // Set sudo
        if (sudo)
            this.headers.Sudo = "" + sudo;
    }
    return BaseService;
}());

exports.BaseService = BaseService;
exports.createInstance = createInstance;
exports.defaultRequest = defaultRequest;
exports.formatQuery = formatQuery;
exports.modifyServices = modifyServices;
exports.wait = wait;
