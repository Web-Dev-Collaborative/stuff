{"version":3,"file":"skip-nav.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { forwardRefWithAs, useCheckStyles } from \"@reach/utils\";\n\n// The user may want to provide their own ID (maybe there are multiple nav\n// menus on a page a use might want to skip at various points in tabbing?).\nlet defaultId = \"reach-skip-nav\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SkipNavLink\n *\n * Renders a link that remains hidden until focused to skip to the main content.\n *\n * @see Docs https://reach.tech/skip-nav#skipnavlink\n */\nconst SkipNavLink = forwardRefWithAs<SkipNavLinkProps, \"a\">(\n  function SkipNavLink(\n    { as: Comp = \"a\", children = \"Skip to content\", contentId, ...props },\n    forwardedRef\n  ) {\n    let id = contentId || defaultId;\n    useCheckStyles(\"skip-nav\");\n    return (\n      <Comp\n        {...props}\n        ref={forwardedRef}\n        href={`#${id}`}\n        // TODO: Remove in 1.0 (kept for back compat)\n        data-reach-skip-link=\"\"\n        data-reach-skip-nav-link=\"\"\n      >\n        {children}\n      </Comp>\n    );\n  }\n);\n\n/**\n * @see Docs https://reach.tech/skip-nav#skipnavlink-props\n */\ntype SkipNavLinkProps = {\n  /**\n   * Allows you to change the text for your preferred phrase or localization.\n   *\n   * @see Docs https://reach.tech/skip-nav#skipnavlink-children\n   */\n  children?: React.ReactNode;\n  /**\n   * An alternative ID for `SkipNavContent`. If used, the same value must be\n   * provided to the `id` prop in `SkipNavContent`.\n   *\n   * @see Docs https://reach.tech/skip-nav#skipnavlink-contentid\n   */\n  contentId?: string;\n};\n\nif (__DEV__) {\n  SkipNavLink.displayName = \"SkipNavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SkipNavContent\n *\n * Renders a div as the target for the link.\n *\n * @see Docs https://reach.tech/skip-nav#skipnavcontent\n */\nconst SkipNavContent = forwardRefWithAs<SkipNavContentProps, \"div\">(\n  function SkipNavContent(\n    { as: Comp = \"div\", id: idProp, ...props },\n    forwardedRef\n  ) {\n    let id = idProp || defaultId;\n    return (\n      <Comp\n        {...props}\n        ref={forwardedRef}\n        id={id}\n        data-reach-skip-nav-content=\"\"\n      />\n    );\n  }\n);\n\n/**\n * @see Docs https://reach.tech/skip-nav#skipnavcontent-props\n */\ntype SkipNavContentProps = {\n  /**\n   * You can place the `SkipNavContent` element as a sibling to your main\n   * content or as a wrapper.\n   *\n   * Keep in mind it renders a `div`, so it may mess with your CSS depending on\n   * where itâ€™s placed.\n   *\n   * @example\n   *   <SkipNavContent />\n   *   <YourMainContent />\n   *   // vs.\n   *   <SkipNavContent>\n   *     <YourMainContent/>\n   *   </SkipNavContent>\n   *\n   * @see Docs https://reach.tech/skip-nav#skipnavcontent-children\n   */\n  children?: React.ReactNode;\n  /**\n   * An alternative ID. If used, the same value must be provided to the\n   * `contentId` prop in `SkipNavLink`.\n   *\n   * @see Docs https://reach.tech/skip-nav#skipnavcontent-id\n   */\n  id?: string;\n};\n\nif (__DEV__) {\n  SkipNavContent.displayName = \"SkipNavContent\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Exports\n\nexport type { SkipNavContentProps, SkipNavLinkProps };\nexport { SkipNavLink, SkipNavContent };\n"],"names":["SkipNavLink","forwardRefWithAs","forwardedRef","as","Comp","children","contentId","props","id","useCheckStyles","React","ref","href","idProp"],"mappings":"yPAKA,IAWMA,EAAcC,oBAClB,WAEEC,WADEC,GAAIC,aAAO,UAAKC,SAAAA,aAAW,oBAAmBC,IAAAA,UAAcC,qCAG1DC,EAAKF,GAhBG,wBAiBZG,iBAAe,YAEbC,gBAACN,mBACKG,GACJI,IAAKT,EACLU,SAAUJ,yBAEW,8BACI,KAExBH,6BAsCcJ,oBACrB,WAEEC,WADEC,GAAIC,aAAO,QAAWS,IAAJL,GAAeD,0BAKjCG,gBAACN,mBACKG,GACJI,IAAKT,EACLM,GALKK,GAtEG,+CA4EoB"}