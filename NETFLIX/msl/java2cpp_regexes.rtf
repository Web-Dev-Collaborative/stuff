{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import com\\.netflix\\.msl\\.([^.]+?);\
#include <\\1.h>\
\
import com\\.netflix\\.msl\\.([^.]+?)\\.([^.]+?);\
#include <\\1/\\2.h>\
\
 *@Test\\n\\s*public void (.+?)\\(\\) .+? \\\{\
TEST_F(MessageInputStreamTest, \\1)\\n\\\{\
\
final (.+?) (data|dataA|dataB|moData|factory|chunk|mis|headerData|peerData|messageHeader|ctx|errorHeader|authutils|masterToken|cc1|cc2|ccMtA1|ccMtA2|ccMtA2|ccMtB1) = new (.+?)\\((.*?)\\);\
shared_ptr<\\1> \\2 = make_shared<\\3>\\(\\4);\
\
final (MslObject|EntityAuthenticationData|ICryptoContext|InputStream|MockTokenFactory|MasterToken|UserIdToken|ServiceToken) (.+?) =\
shared_ptr<\\1> \\2 =\
\
([ \\(])(data|authdata|dataA|dataB|dataA2|factory|moData|encode|moEncode)\\.(\\w)\
\\1\\2->\\3\
\
(\\w+)\\.remove\\((.+?)\\);\
EXPECT_FALSE(\\1->remove(\\2).isNull());\
\
MslTestUtils\\.(toMslObject|getMasterToken|getUserIdToken|getUntrustedMasterToken|getServiceTokens)\
MslTestUtils::\\1\
\
(assertEquals|assertArrayEquals)\
EXPECT_EQ\
\
assertSame\\((.+?), (.+?)\\)\
EXPECT_EQ(\\1.get(), \\2.get())\
\
assertNotSame\\((.+?), (.+?)\\)\
EXPECT_NE(\\1.get(), \\2.get())\
\
final byte\\[\\] (encode|moEncode)\
shared_ptr<ByteArray> \\1\
\
final String \
const string \
\
assertNotNull\\((encode|moEncode)\\)\
EXPECT_TRUE(\\1)\
\
assertTrue\
EXPECT_TRUE}