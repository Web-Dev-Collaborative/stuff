{
 "name":"PigNode",
 "view":"function PigNode(properties) {\n    var self = this;\n    self.properties = properties;\n    self.operation = properties.operation;\n    \n    self.additional_info = function() {\n        if (self.properties.macro) {\n            return \" (MACRO: \"+self.properties.macro+\")\";\n        }\n        if (self.properties.limit) {\n            return \" (\"+self.properties.limit+\")\";\n        }\n        if (self.properties.join &&\n            self.properties.join.strategy &&\n            self.properties.join.type) {\n            var strategy = self.properties.join.strategy;\n            var type = self.properties.join.type;\n            return \" (\"+type+\", \"+strategy+\")\";\n        }\n    };\n\n    self.step_type_color = function() {\n        if (self.properties.step_type) {\n            switch (self.properties.step_type.toLowerCase()) {\n            case 'mapper':\n                return '#3299BB';\n            case 'reducer':\n                return '#FF9900';\n            case 'tez':\n                return '#F5D04C';\n            default:\n                return '#BF0A0D';\n            }\n        } else {\n            return '#BF0A0D';\n        }\n    };\n\n    self.jg = function() {\n        var j;\n        if (self.properties.join) {\n            j = self.properties.join;\n        } else if (self.properties.group) {\n            j = self.properties.group;\n        }\n        return j;\n    }\n                         \n    self.join = function() {        \n        var j = self.jg();\n        if (j && j.by) {\n            var relations = j.by.map(function(rel){ return rel.alias; });\n            var fields = [];\n            var to = j.by[0].fields.length;\n            for (var i = 0; i < to; i++) {\n                fields[i] = [];\n                for (var k = 0; k < j.by.length; k++) {\n                    var rel = j.by[k];\n                    fields[i].push(rel.fields[i]);\n                }\n            }\n            \n            var result = {\n                relations: relations,\n                by: fields.map(function(field_list) { return {fields: field_list}; })\n            };\n            return result;\n        }\n        return;\n    };\n    \n    self.colspan = function() {\n        var j = self.jg();\n        if (j && j.by) {\n            return j.by.length;\n        } else {\n            return 2;\n        }\n    };\n    \n    self.alias = properties.alias;\n    self.expression = properties.expression;\n    self.storage_location = properties.storage_location;\n    self.storage_function = properties.storage_function;\n    \n    self.schema = function() {\n        if (self.properties.schema_equals_pred) {\n            return;\n        }            \n        if (self.properties.schema) {            \n            switch (self.operation) {\n                case 'SPLIT':\n                case 'FILTER':\n                case 'DISTINCT':\n                case 'GROUP':\n                case 'COGROUP':\n                case 'JOIN':\n                case 'LIMIT':\n                        return;\n                default:\n                        return {columns: self.properties.schema};\n            }\n        } else {\n            return;\n        }\n    };\n}\n",
 "template":"<table border=\"1\" cellborder=\"1\" cellspacing=\"0\">\n  <tbody style=\"font-size: 1.5em; font-family: Times, serif; text-align: center; border: 1px solid black;\">\n    <tr style=\"border: 1px solid black;\">\n      <td style=\"border-collapse: collapse; background-color: {{step_type_color}};\" colspan=\"{{colspan}}\">\n        {{operation}}{{additional_info}}\n      </td>\n    </tr>\n    \n    {{#expression}}\n    <tr style=\"border: 1px solid black;\"><td style=\"border-collapse: collapse;\" bgcolor=\"#BCBCBC\" colspan=\"{{colspan}}\">{{expression}}</td></tr>\n    {{/expression}}\n    \n    {{#storage_location}}\n    <tr style=\"border: 1px solid black;\"><td style=\"border-collapse: collapse;\" bgcolor=\"#BCBCBC\" colspan=\"{{colspan}}\">{{storage_location}}</td></tr>\n    {{/storage_location}}\n\n    {{#storage_function}}\n    <tr style=\"border: 1px solid black;\"><td style=\"border-collapse: collapse;\" bgcolor=\"#BCBCBC\" colspan=\"{{colspan}}\">{{storage_function}}</td></tr>\n    {{/storage_function}}\n    \n    <tr style=\"border: 1px solid black;\">\n      <td style=\"border-collapse: collapse;\" bgcolor=\"#424242\" colspan=\"{{colspan}}\">\n        <font color=\"#FFFFFF\">{{alias}}</font>\t\t\t\t\n      </td>\n    </tr>\n\n    {{#join}}\n    <tr style=\"border: 1px solid black;\">\n      {{#relations}}\n      <td style=\"border-collapse: collapse;\" bgcolor=\"#BCBCBC\">{{.}}</td>\n      {{/relations}}\n    </tr>\n    \n    {{#by}}\n    <tr style=\"border: 1px solid black;\">\n      {{#fields}}\n      <td style=\"border-collapse: collapse;\" bgcolor=\"#FFFFFF\">{{.}}</td>\n      {{/fields}}\n    </tr>          \n    {{/by}}        \n    {{/join}}\n\n    {{#schema}}\n    {{#columns}}\n    <tr style=\"border: 1px solid black;\" bgcolor=\"#FFFFFF\">\n      <td style=\"border-collapse: collapse;\" bgcolor=\"#FFFFFF\">{{alias}}</td><td bgcolor=\"#FFFFFF\">{{type}}</td>\n    </tr>\n    {{/columns}}\n    {{/schema}}\n  </tbody>\n</table>\n"
}
