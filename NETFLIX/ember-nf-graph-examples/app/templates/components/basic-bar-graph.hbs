{{#nf-graph
    xScaleType="ordinal"
    yMinMode="fixed"
    yMin=0}}

   {{#nf-graph-content}}

     {{nf-bars data=graphData}}

   {{/nf-graph-content}}
{{/nf-graph}}


<h4>Template</h4>
<table class="CodeRay template"><tbody><tr>
  <td class="line-numbers">
<pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td>
  <td class="code"><pre><span title="Operator">{</span><span title="Operator">{</span><span title="Comment" class="comment">#nf-graph</span><span title="Space">
    </span><span title="Ident">xScaleType</span><span title="Operator">=</span><span title="String" class="string"><span title="String" class="delimiter">"</span><span title="String" class="content">ordinal</span><span title="String" class="delimiter">"</span></span><span title="Space">
    </span><span title="Ident">yMinMode</span><span title="Operator">=</span><span title="String" class="string"><span title="String" class="delimiter">"</span><span title="String" class="content">fixed</span><span title="String" class="delimiter">"</span></span><span title="Space">
    </span><span title="Ident">yMin</span><span title="Operator">=</span><span title="Integer" class="integer">0</span><span title="Operator">}</span><span title="Operator">}</span><span title="Space">

   </span><span title="Operator">{</span><span title="Operator">{</span><span title="Comment" class="comment">#nf-graph-content}}</span><span title="Space">

     </span><span title="Operator">{</span><span title="Operator">{</span><span title="Ident">nf</span><span title="Operator">-</span><span title="Ident">bars</span><span title="Space"> </span><span title="Ident">data</span><span title="Operator">=</span><span title="Ident">graphData</span><span title="Operator">}</span><span title="Operator">}</span><span title="Space">

   </span><span title="Operator">{</span><span title="Operator">{</span><span title="Operator">/</span><span title="Ident">nf</span><span title="Operator">-</span><span title="Ident">graph</span><span title="Operator">-</span><span title="Ident">content</span><span title="Operator">}</span><span title="Operator">}</span><span title="Space">
</span><span title="Operator">{</span><span title="Operator">{</span><span title="Operator">/</span><span title="Ident">nf</span><span title="Operator">-</span><span title="Ident">graph</span><span title="Operator">}</span><span title="Operator">}</span></pre></td>
</tr></tbody></table>

<div class="discussion">
  <p>
  \{{#nf-graph}} is the main container.  xScaleType="ordinal" is required for bar graphs and causes bars to be evenly spaced based on ordinal position.  yMinMode="fixed" and yMin=0 causes the Y Axis to always start at zero regardless of the minimum data value among the data array elements (works with any graph type).
  </p>
  <p>
  \{{#nf-graph-content}} is the container for elements that should appear inside the graph's plot area.
  </p>
  <p>
  \{{#nf-bars}} adds a set of bars the graph. "data=graphData" assigns an array of data to the line. One bar is drawn for each element in the array.
  </p>
  <p>
  By default \{{nf-bars}} will look for properties "x" and "y" on each element in the data array. "x" defines the ordinal position of each bar and is often a simple index. "y" defines the height of each bar.  Bar heights are draw relative to each other based on the minimum and maximum y values among all the data elements.
  </p>
</div>


<h4>Component JavaScript</h4>
<div class="CodeRay">
<table class="CodeRay"><tbody><tr>
  <td class="line-numbers">
<pre>1
2
3
4
5
6
7
8
9
10
</pre></td>
  <td class="code"><pre><span title="Reserved" class="reserved">import</span><span title="Space"> </span><span title="Ident">Ember</span><span title="Space"> </span><span title="Ident">from</span><span title="Space"> </span><span title="String" class="string"><span title="String" class="delimiter">'</span><span title="String" class="content">ember</span><span title="String" class="delimiter">'</span></span><span title="Operator">;</span><span title="Space">
</span><span title="Reserved" class="reserved">import</span><span title="Space"> </span><span title="Operator">{</span><span title="Space"> </span><span title="Ident">dataGenerator</span><span title="Space"> </span><span title="Operator">}</span><span title="Space"> </span><span title="Ident">from</span><span title="Space"> </span><span title="String" class="string"><span title="String" class="delimiter">'</span><span title="String" class="content">../services/data-generator</span><span title="String" class="delimiter">'</span></span><span title="Operator">;</span><span title="Space">

</span><span title="Reserved" class="reserved">export</span><span title="Space"> </span><span title="Keyword" class="keyword">default</span><span title="Space"> </span><span title="Ident">Ember</span><span title="Operator">.</span><span title="Ident">Component</span><span title="Operator">.</span><span title="Ident">extend</span><span title="Operator">({</span><span title="Space">

  </span><span title="Function" class="function">graphData</span><span title="Operator">:</span><span title="Space"> </span><span title="Keyword" class="keyword">function</span><span title="Operator">(</span><span title="Operator">)</span><span title="Space"> </span><span title="Operator">{</span><span title="Space">
    </span><span title="Keyword" class="keyword">return</span><span title="Space"> </span><span title="Ident">dataGenerator</span><span title="Operator">.</span><span title="Ident">simpleOrdinalData</span><span title="Operator">(</span><span title="Operator">)</span><span title="Operator">;</span><span title="Space">
  </span><span title="Operator">}</span><span title="Operator">.</span><span title="Ident">property</span><span title="Operator">(</span><span title="Operator">)</span><span title="Space">

</span><span title="Operator">})</span><span title="Operator">;</span><span title="Space">
</span></pre></td>
</tr></tbody></table>
</div>



